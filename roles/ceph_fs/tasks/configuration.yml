---
- name: Manage Ceph Filesystems block
  when: inventory_hostname == groups['ceph_mon'][0]
  block:
    - name: List Ceph Filesystems
      ansible.builtin.command: ceph fs ls -f json
      changed_when: false
      check_mode: no
      when: "pve_ceph_fs | length > 0"
      register: _ceph_fs

    - name: Create Ceph Filesystems
      ansible.builtin.command: >-
        pveceph fs create
        --name {{ item.name }}
        --add-storage {{ item.storage }}
        --pg_num {{ item.pgs }}
      register: _ceph_fs_create
      failed_when: _ceph_fs_create.stderr
      when: "item.name not in (_ceph_fs.stdout | from_json | map(attribute='name'))"
      with_items: '{{ pve_ceph_fs }}'

    - name: Get Ceph Filesystem pool CRUSH rules
      ansible.builtin.command: 'ceph -f json osd pool get {{ item.0.name }}_{{ item.1 }} crush_rule'
      changed_when: false
      check_mode: no
      when: "pve_ceph_fs | length > 0"
      register: _ceph_fs_rule
      loop: '{{ pve_ceph_fs | product(["data", "metadata"]) | list }}'

    - name: Set Ceph Filesystem pool CRUSH rules
      ansible.builtin.command: >-
        ceph osd pool set {{ item.item.0.name }}_{{ item.item.1 }} crush_rule {{ item.item.0.rule }}
      when: "item.item.0.rule != (item.stdout | from_json).crush_rule"
      loop: '{{ _ceph_fs_rule.results }}'
      loop_control:
        label: '{{ item.item.0.name }}_{{ item.item.1 }}'

    - name: Create Ceph filesystem key
      ansible.builtin.command: 'ceph auth get-or-create client.{{ item.name }} osd "allow rw pool={{ item.name }}_data" mon "allow r" mds "allow rw"'
      register: _ceph_fs_auth
      changed_when: '"added key" in _ceph_fs_auth.stdout'
  # when moved to the top as per best practices
      loop: '{{ pve_ceph_fs }}'
  when: inventory_hostname == groups['ceph_mon'][0]

- name: Fetch Ceph filesystem key
  ansible.builtin.command: 'ceph auth print-key client.{{ item.name }}'
  args:
    creates: '/etc/ceph/{{ item.name }}.secret'
  register: _ceph_fs_key
  when: "item.mountpoint is defined"
  loop: '{{ pve_ceph_fs }}'

- name: Save Ceph filesystem key
  ansible.builtin.copy:
    dest: '/etc/ceph/{{ item.item.name }}.secret'
    owner: 'root'
    group: 'root'
    mode: '0600'
    content: '{{ item.stdout }}'
  when: "item is changed"
  loop: '{{ _ceph_fs_key.results }}'
  loop_control:
    label: '{{ item.item }}'

- name: Mount Ceph filesystems
  mount:
    path: '{{ item.mountpoint }}'
    src: |-
      {% for h in groups['ceph_mon'] -%}
      {{ hostvars[h].ansible_all_ipv4_addresses | ansible.utils.ipaddr(pve_ceph_network) | first -}}
      {{ loop.last | ternary("", ",") -}}
      {% endfor %}:/
    fstype: 'ceph'
    opts: 'name={{ item.name }},secretfile=/etc/ceph/{{ item.name }}.secret,_netdev,fs={{ item.name }}'
    state: 'mounted'
  when: "item.mountpoint is defined"
  loop: '{{ pve_ceph_fs }}'
  register: _ceph_fs_mount
