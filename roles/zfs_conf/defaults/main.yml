---
# Defines if ZFS filesystem(s) are created
pve_zfs_create_filesystems: false

# Defines if ZFS pool(s) are created
pve_zfs_create_pools: false

# Defines zpool(s) to manage
pve_zfs_pools: []
  # - name: SSD-TANK
  #   action: create
  #   # set permanent options at creation time
  #   options:
  #     ashift: 13
  #   # on | off (default) | lzjb | gzip | lz4 | zle | zstd
  #   compression: lz4
  #   # Define devices to create pool with.
  #   devices:
  #     - ata-INTEL_SSDSC2BW240A4_CVDA352100YL2403GN
  #     - ata-INTEL_SSDSC2BW240A4_BTDA329505KM2403GN
  #   # Define pool type... | Single Disk | Mirror | RAID10 | RAIDZ | RAIDZ2 | RAIDZ3 | dRAID | dRAID2 | dRAID3
  #   type: Mirror
  #   state: present
  #   add_storage: true # Add the ZFS pool as storage in Proxmox.
  # - name: SSD-TANK
  #   action: add
  #   compression: lz4
  #   devices:
  #     - ata-INTEL_SSDSC2BW240A4_CVDA352100GP2403GN
  #     - ata-INTEL_SSDSC2BW240A4_CVDA401000Q02403GN
  #   type: Mirror
  #   state: present

# Defines if iscsitarget is configured to server iSCSI volumes
pve_zfs_enable_iscsi: false

# Defines if NFS Kernel Server should be configured to serve NFS
pve_zfs_enable_nfs: false

# Defines if paramaters defined in zfs_performance_tuning are applied
zfs_enable_performance_tuning: false

# Defines if keys for encrypted filesystems are loaded on boot
zfs_autoload_encryption_keys: false

# Defines filesystems to manage
pve_zfs_filesystems: []
  # - name: nfs
  #   pool: tank
  #   atime: off
  #   # on | off (default) | lzjb | gzip | lz4 | zle | zstd
  #   compression: lz4
  #   # latency (default) | throughput
  #   logbias: latency
  #   # Define an alternate mountpoint
  #   # mountpoint: /var/lib/docker
  #   # all (default) | none | metadata
  #   primarycache: all
  #   quota: 3G
  #   refquota: none
  #   # Defines recordsize.. 16K | 32K | 64K | 128K (default) | and etc.
  #   recordsize: 16K
  #   sharenfs: on
  #   # standard (default) | always | disabled    sync: disabled
  #   # Controls whether the snapshots devices of zvol's are hidden or visible. hidden (default) | visible
  #   snapdev: visible
  #   # Controls whether the .zfs directory is hidden or visible in the root of the file system. hidden (default) | visible
  #   snapdir: visible
  #   state: present
  # - name: Shares/Movies
  #   compression: lz4
  #   group: nogroup
  #   mountpoint: /TANK/Shares/Movies
  #   owner: nobody
  #   pool: TANK
  #   quota: none
  #   refquota: 100G
  #   sharesmb: true
  #   smb_options:
  #     browseable: "yes"
  #     comment: ""
  #     create_directory_mask: "0755"
  #     create_mask: "0777"
  #     guest_ok: "yes"
  #     read_only: "no"
  #     share_name: Movies
  #     valid_users: +users
  #     writable: "yes"
  #   xattr: sa
  #   acltype: posixacl
  #   state: present
  #   #standard (default) | always | disabled
  #   sync: disabled


# Defines if iscsitarget service is enabled
pve_zfs_iscsistarget_enable: "{{ pve_zfs_enable_iscsi }}"

# Define your FQDN in reverse...(local.vagrant)
pve_zfs_iscsistarget_iqn: iqn.2001-04.org.example

pve_zfs_iscsistarget_max_sleep: 3
pve_zfs_iscsistarget_options: ""
pve_zfs_iscsitarget_target_portals:
  # Define IP address to listen for iSCSI connections | ALL (default) | cidr (x.x.x.x/xx) | disable ALL if defining cidr
  - ALL
#  - 10.0.2.0/24
#  - 192.168.2.0/24

# Defines if ZFS Filesystem mountpoint permissions are managed
zfs_manage_filesystem_permissions: false

zfs_performance_tuning:
  - param: zfs_prefetch_disable
    value: 1
  - param: zfs_txg_timeout
    value: 5
  - param: zfs_arc_max
    # 1/2 total system memory
    value: "{{ (ansible_memtotal_mb | int * 1024 * 1024 * 0.5) | round | int }}"
  - param: zfs_arc_meta_limit
    # 1/4 zfs_arc_max
    value: "{{ (ansible_memtotal_mb | int * 1024 * 1024 * 0.125) | round | int }}"
  - param: zfs_arc_min
    # 1/2 zfs_arc_meta_limit
    value: "{{ (ansible_memtotal_mb | int * 1024 * 1024 * 0.0625) | round | int }}"

# defines global scrub cron job parameters. Only applies when `zfs_enable_monitoring` is set to True.
zfs_pools_scrub_cron:
  minute: 0
  hour: 0
  day: "*"
  month: "*"
  weekday: sun
zfs_ubuntu_ppa: ppa:zfs-native/stable

# Defines block-device volumes to manage
zfs_volumes: []
  # - name: backups
  #   pool: tank
  #   # Defines if iscsitarget should serve volume... | on | off | or not defined
  #   shareiscsi: on
  #   # Defines volsize for block devices
  #   volsize: 1G
  #   lun: 0
  #   allow:
  #     - ALL
  #   state: present
  # - name: data
  #   pool: tank
  #   shareiscsi: on
  #   volsize: 2G
  #   lun: 1
  #   allow:
  #     # - 10.0.0.0/8
  #     - 192.168.202.0/24
  #   state: present

zfs_enable_monitoring: False

# in percentage.
zfs_monitoring_capacity_threshold: 80

# in days.
zfs_monitoring_scrub_max_age: 8

zfs_monitoring_email_dest: root@localhost